// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  account       Account[]
  workouts      Workout[]

 
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Workout {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String         @unique
  slug          String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  exerciseBoards ExerciseBoard[]
  userId        String         @db.ObjectId
  user          User           @relation(fields: [userId], references: [id])
}

model ExerciseBoard {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  status    String
  duration  Int
  slug      String
  exercises  Exercise[]
  workout   Workout   @relation(fields: [exerciseId], references: [id])
  exerciseId String    @db.ObjectId

  @@unique([slug, status, exerciseId])
}
model Exercise {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  slug           String
  name           String
  description    String
  intensity       Intensity     @default(LOW)
  finishDate     DateTime
  order          Int
  exerciseBoard   ExerciseBoard @relation(fields: [exerciseBoardId], references: [id])
  exerciseBoardId String       @db.ObjectId
  @@unique([slug, exerciseBoardId])
}

enum Intensity {
  LOW
  MEDIUM
  HIGH
}